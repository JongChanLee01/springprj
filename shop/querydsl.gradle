import com.shop.querydsl.gradle.MetadataExportExtension
import com.shop.querydsl.gradle.SchemaExportExtension

ext {
    querydslGeneratedDir = 'src/main/generated' // 생성된 Querydsl 소스코드의 디렉토리
    querydslMetaModelPackageName = 'com.example.model' // Querydsl 메타모델 클래스의 패키지명
}

querydsl {
    jpa = true // JPA를 사용하는 경우 true로 설정
    querydslSourcesDir = file("${projectDir}/src/main/generated") // 생성된 Querydsl 소스코드의 디렉토리 지정
}

task querydslGenerate(type: QuerydslTask, dependsOn: 'compileJava') {
    JPAConfiguration jpaConfig = configurationDelegate.extensions.getByName("jpa", JPAConfiguration)
    Library library = jpaConfig.configuration.classpath.find { it instanceof RegularFile }
    URLClassLoader classLoader = new URLClassLoader([library.toURI().toURL()] as URL[], null)

    sourceDir = files("${projectDir}/src/main/java")
    classpath = configurations.compile + configurations.annotationProcessor
    targetDir = file("${projectDir}/src/main/generated")

    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs = [
            "-proc:only",
            "-processor", "cohttp://m.querydsl.apt.jpa.JPAAnnotationProcessor",
            "-s", project.querydslGeneratedDir // 생성된 Querydsl 소스코드의 디렉토리 지정
    ]
}

compileJava {
    dependsOn querydslGenerate // 컴파일 전에 Querydsl 코드를 먼저 생성
    source querydslGenerate.destinationDir // Querydsl 코드를 소스코드로 인식
}

sourceSets {
    main {
        java {
            srcDir project.querydslGeneratedDir // 생성된 Querydsl 소스코드 디렉토리 추가
        }
    }
}

configurations {
    querydsl.extendsFrom compileClasspath // Querydsl 코드를 컴파일하려면 클래스패스에 추가
}